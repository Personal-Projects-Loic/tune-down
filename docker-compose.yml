services:
  frontend:
    build:
      context: ./frontend
      dockerfile: dev.Dockerfile
    environment:
      NODE_ENV: production
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm run dev
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: dev.Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: tunedown
      POSTGRES_PASSWORD: azerty123
      POSTGRES_DB: tunedown_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000"
      - "9001:9001" # Console port
    environment:
      - MINIO_HOST=minio
      - MINIO_PORT=9000
      - MINIO_ROOT_USER=tunedown
      - MINIO_ROOT_PASSWORD=tunedownPassword
      - MINIO_SECURE=False
    volumes:
      - minio_data:/data
    command: server --console-address ":9001" /data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:
  minio_data:

networks:
  app-network:
    driver: bridge
